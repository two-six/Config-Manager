* Script

** Main Variables
#+begin_src bash :tangle config-manager
#!/bin/bash

MAINFOLDER="${HOME}/.config/config-manager"
CONFIG="${MAINFOLDER}/config"
FILESFOLDER="${MAINFOLDER}/files"
#+end_src

** Checking If Config Files Exists
#+begin_src bash :tangle config-manager
if [ $# -eq 0 ]
then
    if [ ! -d $MAINFOLDER ]
    then
        mkdir -p $MAINFOLDER
        touch ${CONFIG}
        echo $FILESFOLDER > ${CONFIG}
        mv ${HOME}/config ${CONFIG}
    fi
    if [ ! -f $CONFIG ]
    then
        touch $CONFIG
        echo $FILESFOLDER > $CONFIG
        if [ ! -d $FILESFOLDER ]
        then
            mkdir -p $FILESFOLDER
        fi
    fi
fi
FILESFOLDER=$( head -n 1 $CONFIG )
#+end_src

#+RESULTS:

** Listing All Available Configurations If No Arguments
#+begin_src bash :tangle config-manager
if [ $# -eq 0 ]
then
    ls $FILESFOLDER
#+end_src

** If There Is Argument, Looks For a Corresponding Theme In Config File And Moves Files
#+begin_src bash :tangle config-manager
else
    if [ ! -d $MAINFOLDER/backup ]
    then
        mkdir $MAINFOLDER/backup
    fi
    rm -rf $MAINFOLDER/backup/*
    LINE=$( grep -n "NAME|$1" $CONFIG | cut -d : -f1 )
    LENGTH=$( wc -l $CONFIG | cut -d ' ' -f1 )
    for (( ; ; ))
    do
        LINE=$((LINE+1))
        CURRENT=$( sed -n $LINE'p' $CONFIG )
        if [ $( cut -d \| -f1 <<< $CURRENT ) == "NAME" ] || [ $LINE -gt $LENGTH ] ||
               [ $( cut -d \| -f1 <<< $CURRENT ) == "COMMAND" ]
        then
            break
        fi
        if [ $LINE -gt $LENGTH ]
        then
            echo "forced end"
            break
        fi
        NAME=$( cut -d \| -f1 <<< $CURRENT )
        DESTINATION=$( cut -d \| -f2 <<< $CURRENT )
        if [ -f ~/$DESTINATION ]
        then
            cp ~/$DESTINATION $MAINFOLDER/backup/$NAME
        fi
        cp -r $FILESFOLDER/$1/$NAME ~/$DESTINATION
    done
fi
#+end_src

** If There Was a Command Variable, Executes Corresponding File
#+begin_src bash :tangle config-manager
if [[ $( cut -d \| -f1 <<< $CURRENT ) == "COMMAND" ]]
then
    COMMANDFILE=$( cut -d \| -f2 <<< $CURRENT )
    chmod +x $FILESFOLDER/$1/$COMMANDFILE
    exec $FILESFOLDER/$1/$COMMANDFILE
fi
#+end_src
